// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/about/page.tsx
{
  const handler = {} as typeof import("../../src/app/about/page.js")
  handler satisfies AppPageConfig<"/about">
}

// Validate ../../src/app/accountant/page.tsx
{
  const handler = {} as typeof import("../../src/app/accountant/page.js")
  handler satisfies AppPageConfig<"/accountant">
}

// Validate ../../src/app/accounting/page.tsx
{
  const handler = {} as typeof import("../../src/app/accounting/page.js")
  handler satisfies AppPageConfig<"/accounting">
}

// Validate ../../src/app/admin/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../src/app/blog/[slug]/page.tsx
{
  const handler = {} as typeof import("../../src/app/blog/[slug]/page.js")
  handler satisfies AppPageConfig<"/blog/[slug]">
}

// Validate ../../src/app/blog/page.tsx
{
  const handler = {} as typeof import("../../src/app/blog/page.js")
  handler satisfies AppPageConfig<"/blog">
}

// Validate ../../src/app/calculator/page.tsx
{
  const handler = {} as typeof import("../../src/app/calculator/page.js")
  handler satisfies AppPageConfig<"/calculator">
}

// Validate ../../src/app/contact/page.tsx
{
  const handler = {} as typeof import("../../src/app/contact/page.js")
  handler satisfies AppPageConfig<"/contact">
}

// Validate ../../src/app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../src/app/foundation/page.tsx
{
  const handler = {} as typeof import("../../src/app/foundation/page.js")
  handler satisfies AppPageConfig<"/foundation">
}

// Validate ../../src/app/leadership/page.tsx
{
  const handler = {} as typeof import("../../src/app/leadership/page.js")
  handler satisfies AppPageConfig<"/leadership">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/market/page.tsx
{
  const handler = {} as typeof import("../../src/app/market/page.js")
  handler satisfies AppPageConfig<"/market">
}

// Validate ../../src/app/operations/page.tsx
{
  const handler = {} as typeof import("../../src/app/operations/page.js")
  handler satisfies AppPageConfig<"/operations">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/process/page.tsx
{
  const handler = {} as typeof import("../../src/app/process/page.js")
  handler satisfies AppPageConfig<"/process">
}

// Validate ../../src/app/properties/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/properties/[id]/page.js")
  handler satisfies AppPageConfig<"/properties/[id]">
}

// Validate ../../src/app/properties/page.tsx
{
  const handler = {} as typeof import("../../src/app/properties/page.js")
  handler satisfies AppPageConfig<"/properties">
}

// Validate ../../src/app/secretary/page.tsx
{
  const handler = {} as typeof import("../../src/app/secretary/page.js")
  handler satisfies AppPageConfig<"/secretary">
}

// Validate ../../src/app/sell/page.tsx
{
  const handler = {} as typeof import("../../src/app/sell/page.js")
  handler satisfies AppPageConfig<"/sell">
}

// Validate ../../src/app/sitemap/page.tsx
{
  const handler = {} as typeof import("../../src/app/sitemap/page.js")
  handler satisfies AppPageConfig<"/sitemap">
}

// Validate ../../src/app/api/accounting/bank-reconciliation/route.ts
{
  const handler = {} as typeof import("../../src/app/api/accounting/bank-reconciliation/route.js")
  handler satisfies RouteHandlerConfig<"/api/accounting/bank-reconciliation">
}

// Validate ../../src/app/api/accounting/ledger/route.ts
{
  const handler = {} as typeof import("../../src/app/api/accounting/ledger/route.js")
  handler satisfies RouteHandlerConfig<"/api/accounting/ledger">
}

// Validate ../../src/app/api/accounting/payables/route.ts
{
  const handler = {} as typeof import("../../src/app/api/accounting/payables/route.js")
  handler satisfies RouteHandlerConfig<"/api/accounting/payables">
}

// Validate ../../src/app/api/auth/[...nextauth]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/[...nextauth]/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/[...nextauth]">
}

// Validate ../../src/app/api/auth/register/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/register/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/register">
}

// Validate ../../src/app/api/documents/route.ts
{
  const handler = {} as typeof import("../../src/app/api/documents/route.js")
  handler satisfies RouteHandlerConfig<"/api/documents">
}

// Validate ../../src/app/api/maintenance/route.ts
{
  const handler = {} as typeof import("../../src/app/api/maintenance/route.js")
  handler satisfies RouteHandlerConfig<"/api/maintenance">
}

// Validate ../../src/app/api/payments/route.ts
{
  const handler = {} as typeof import("../../src/app/api/payments/route.js")
  handler satisfies RouteHandlerConfig<"/api/payments">
}

// Validate ../../src/app/api/properties/route.ts
{
  const handler = {} as typeof import("../../src/app/api/properties/route.js")
  handler satisfies RouteHandlerConfig<"/api/properties">
}

// Validate ../../src/app/api/units/route.ts
{
  const handler = {} as typeof import("../../src/app/api/units/route.js")
  handler satisfies RouteHandlerConfig<"/api/units">
}

// Validate ../../src/app/api/users/route.ts
{
  const handler = {} as typeof import("../../src/app/api/users/route.js")
  handler satisfies RouteHandlerConfig<"/api/users">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
