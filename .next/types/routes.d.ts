// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/admin" | "/blog" | "/blog/[slug]" | "/calculator" | "/contact" | "/dashboard" | "/foundation" | "/leadership" | "/login" | "/market" | "/process" | "/properties" | "/properties/[id]" | "/sell" | "/sitemap"
type AppRouteHandlerRoutes = "/api/admin/accounting/bank-reconciliation" | "/api/admin/accounting/ledger" | "/api/admin/business/customers" | "/api/admin/business/documents" | "/api/admin/business/invoices" | "/api/admin/business/payments" | "/api/admin/business/stats" | "/api/admin/financial/summary" | "/api/admin/stats" | "/api/admin/users" | "/api/auth/[...nextauth]" | "/api/auth/register" | "/api/client/documents" | "/api/client/notifications" | "/api/client/profile" | "/api/client/properties" | "/api/client/transactions" | "/api/documents" | "/api/maintenance" | "/api/payments" | "/api/properties" | "/api/units" | "/api/users"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/admin": {}
  "/api/admin/accounting/bank-reconciliation": {}
  "/api/admin/accounting/ledger": {}
  "/api/admin/business/customers": {}
  "/api/admin/business/documents": {}
  "/api/admin/business/invoices": {}
  "/api/admin/business/payments": {}
  "/api/admin/business/stats": {}
  "/api/admin/financial/summary": {}
  "/api/admin/stats": {}
  "/api/admin/users": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/register": {}
  "/api/client/documents": {}
  "/api/client/notifications": {}
  "/api/client/profile": {}
  "/api/client/properties": {}
  "/api/client/transactions": {}
  "/api/documents": {}
  "/api/maintenance": {}
  "/api/payments": {}
  "/api/properties": {}
  "/api/units": {}
  "/api/users": {}
  "/blog": {}
  "/blog/[slug]": { "slug": string; }
  "/calculator": {}
  "/contact": {}
  "/dashboard": {}
  "/foundation": {}
  "/leadership": {}
  "/login": {}
  "/market": {}
  "/process": {}
  "/properties": {}
  "/properties/[id]": { "id": string; }
  "/sell": {}
  "/sitemap": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
